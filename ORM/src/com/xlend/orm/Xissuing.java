// Generated by com.xlend.orm.tools.dbgen.DbGenerator.class at Thu Aug 09 09:09:26 EEST 2012
// generated file: do not modify
package com.xlend.orm;

import com.xlend.orm.dbobject.DbObject;
import com.xlend.orm.dbobject.ForeignKeyViolationException;
import com.xlend.orm.dbobject.Triggers;
import java.sql.*;
import java.util.ArrayList;

public class Xissuing extends DbObject  {
    private static Triggers activeTriggers = null;
    private Integer xissuingId = null;
    private Date issueddate = null;
    private Integer operatorId = null;
    private Integer xmachineId = null;
    private Integer xsiteId = null;
    private Timestamp time1Start = null;
    private Timestamp time1End = null;
    private Timestamp time2Start = null;
    private Timestamp time2End = null;
    private Timestamp time3Start = null;
    private Timestamp time3End = null;
    private Timestamp time4Start = null;
    private Timestamp time4End = null;
    private Timestamp time5Start = null;
    private Timestamp time5End = null;
    private Timestamp time6Start = null;
    private Timestamp time6End = null;
    private Timestamp time7Start = null;
    private Timestamp time7End = null;
    private Integer hours1Start = null;
    private Integer hours1End = null;
    private Integer hours2Start = null;
    private Integer hours2End = null;
    private Integer hours3Start = null;
    private Integer hours3End = null;
    private Integer hours4Start = null;
    private Integer hours4End = null;
    private Integer hours5Start = null;
    private Integer hours5End = null;
    private Integer hours6Start = null;
    private Integer hours6End = null;
    private Integer hours7Start = null;
    private Integer hours7End = null;
    private Integer liters1Start = null;
    private Integer liters1End = null;
    private Integer liters2Start = null;
    private Integer liters2End = null;
    private Integer liters3Start = null;
    private Integer liters3End = null;
    private Integer liters4Start = null;
    private Integer liters4End = null;
    private Integer liters5Start = null;
    private Integer liters5End = null;
    private Integer liters6Start = null;
    private Integer liters6End = null;
    private Integer liters7Start = null;
    private Integer liters7End = null;
    private Integer issuedby1Start = null;
    private Integer issuedby1End = null;
    private Integer issuedby2Start = null;
    private Integer issuedby2End = null;
    private Integer issuedby3Start = null;
    private Integer issuedby3End = null;
    private Integer issuedby4Start = null;
    private Integer issuedby4End = null;
    private Integer issuedby5Start = null;
    private Integer issuedby5End = null;
    private Integer issuedby6Start = null;
    private Integer issuedby6End = null;
    private Integer issuedby7Start = null;
    private Integer issuedby7End = null;

    public Xissuing(Connection connection) {
        super(connection, "xissuing", "xissuing_id");
        setColumnNames(new String[]{"xissuing_id", "issueddate", "operator_id", "xmachine_id", "xsite_id", "time1_start", "time1_end", "time2_start", "time2_end", "time3_start", "time3_end", "time4_start", "time4_end", "time5_start", "time5_end", "time6_start", "time6_end", "time7_start", "time7_end", "hours1_start", "hours1_end", "hours2_start", "hours2_end", "hours3_start", "hours3_end", "hours4_start", "hours4_end", "hours5_start", "hours5_end", "hours6_start", "hours6_end", "hours7_start", "hours7_end", "liters1_start", "liters1_end", "liters2_start", "liters2_end", "liters3_start", "liters3_end", "liters4_start", "liters4_end", "liters5_start", "liters5_end", "liters6_start", "liters6_end", "liters7_start", "liters7_end", "issuedby1_start", "issuedby1_end", "issuedby2_start", "issuedby2_end", "issuedby3_start", "issuedby3_end", "issuedby4_start", "issuedby4_end", "issuedby5_start", "issuedby5_end", "issuedby6_start", "issuedby6_end", "issuedby7_start", "issuedby7_end"});
    }

    public Xissuing(Connection connection, Integer xissuingId, Date issueddate, Integer operatorId, Integer xmachineId, Integer xsiteId, Timestamp time1Start, Timestamp time1End, Timestamp time2Start, Timestamp time2End, Timestamp time3Start, Timestamp time3End, Timestamp time4Start, Timestamp time4End, Timestamp time5Start, Timestamp time5End, Timestamp time6Start, Timestamp time6End, Timestamp time7Start, Timestamp time7End, Integer hours1Start, Integer hours1End, Integer hours2Start, Integer hours2End, Integer hours3Start, Integer hours3End, Integer hours4Start, Integer hours4End, Integer hours5Start, Integer hours5End, Integer hours6Start, Integer hours6End, Integer hours7Start, Integer hours7End, Integer liters1Start, Integer liters1End, Integer liters2Start, Integer liters2End, Integer liters3Start, Integer liters3End, Integer liters4Start, Integer liters4End, Integer liters5Start, Integer liters5End, Integer liters6Start, Integer liters6End, Integer liters7Start, Integer liters7End, Integer issuedby1Start, Integer issuedby1End, Integer issuedby2Start, Integer issuedby2End, Integer issuedby3Start, Integer issuedby3End, Integer issuedby4Start, Integer issuedby4End, Integer issuedby5Start, Integer issuedby5End, Integer issuedby6Start, Integer issuedby6End, Integer issuedby7Start, Integer issuedby7End) {
        super(connection, "xissuing", "xissuing_id");
        setNew(xissuingId.intValue() <= 0);
//        if (xissuingId.intValue() != 0) {
            this.xissuingId = xissuingId;
//        }
        this.issueddate = issueddate;
        this.operatorId = operatorId;
        this.xmachineId = xmachineId;
        this.xsiteId = xsiteId;
        this.time1Start = time1Start;
        this.time1End = time1End;
        this.time2Start = time2Start;
        this.time2End = time2End;
        this.time3Start = time3Start;
        this.time3End = time3End;
        this.time4Start = time4Start;
        this.time4End = time4End;
        this.time5Start = time5Start;
        this.time5End = time5End;
        this.time6Start = time6Start;
        this.time6End = time6End;
        this.time7Start = time7Start;
        this.time7End = time7End;
        this.hours1Start = hours1Start;
        this.hours1End = hours1End;
        this.hours2Start = hours2Start;
        this.hours2End = hours2End;
        this.hours3Start = hours3Start;
        this.hours3End = hours3End;
        this.hours4Start = hours4Start;
        this.hours4End = hours4End;
        this.hours5Start = hours5Start;
        this.hours5End = hours5End;
        this.hours6Start = hours6Start;
        this.hours6End = hours6End;
        this.hours7Start = hours7Start;
        this.hours7End = hours7End;
        this.liters1Start = liters1Start;
        this.liters1End = liters1End;
        this.liters2Start = liters2Start;
        this.liters2End = liters2End;
        this.liters3Start = liters3Start;
        this.liters3End = liters3End;
        this.liters4Start = liters4Start;
        this.liters4End = liters4End;
        this.liters5Start = liters5Start;
        this.liters5End = liters5End;
        this.liters6Start = liters6Start;
        this.liters6End = liters6End;
        this.liters7Start = liters7Start;
        this.liters7End = liters7End;
        this.issuedby1Start = issuedby1Start;
        this.issuedby1End = issuedby1End;
        this.issuedby2Start = issuedby2Start;
        this.issuedby2End = issuedby2End;
        this.issuedby3Start = issuedby3Start;
        this.issuedby3End = issuedby3End;
        this.issuedby4Start = issuedby4Start;
        this.issuedby4End = issuedby4End;
        this.issuedby5Start = issuedby5Start;
        this.issuedby5End = issuedby5End;
        this.issuedby6Start = issuedby6Start;
        this.issuedby6End = issuedby6End;
        this.issuedby7Start = issuedby7Start;
        this.issuedby7End = issuedby7End;
    }

    public DbObject loadOnId(int id) throws SQLException, ForeignKeyViolationException {
        Xissuing xissuing = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        String stmt = "SELECT xissuing_id,issueddate,operator_id,xmachine_id,xsite_id,time1_start,time1_end,time2_start,time2_end,time3_start,time3_end,time4_start,time4_end,time5_start,time5_end,time6_start,time6_end,time7_start,time7_end,hours1_start,hours1_end,hours2_start,hours2_end,hours3_start,hours3_end,hours4_start,hours4_end,hours5_start,hours5_end,hours6_start,hours6_end,hours7_start,hours7_end,liters1_start,liters1_end,liters2_start,liters2_end,liters3_start,liters3_end,liters4_start,liters4_end,liters5_start,liters5_end,liters6_start,liters6_end,liters7_start,liters7_end,issuedby1_start,issuedby1_end,issuedby2_start,issuedby2_end,issuedby3_start,issuedby3_end,issuedby4_start,issuedby4_end,issuedby5_start,issuedby5_end,issuedby6_start,issuedby6_end,issuedby7_start,issuedby7_end FROM xissuing WHERE xissuing_id=" + id;
        try {
            ps = getConnection().prepareStatement(stmt);
            rs = ps.executeQuery();
            if (rs.next()) {
                xissuing = new Xissuing(getConnection());
                xissuing.setXissuingId(new Integer(rs.getInt(1)));
                xissuing.setIssueddate(rs.getDate(2));
                xissuing.setOperatorId(new Integer(rs.getInt(3)));
                xissuing.setXmachineId(new Integer(rs.getInt(4)));
                xissuing.setXsiteId(new Integer(rs.getInt(5)));
                xissuing.setTime1Start(rs.getTimestamp(6));
                xissuing.setTime1End(rs.getTimestamp(7));
                xissuing.setTime2Start(rs.getTimestamp(8));
                xissuing.setTime2End(rs.getTimestamp(9));
                xissuing.setTime3Start(rs.getTimestamp(10));
                xissuing.setTime3End(rs.getTimestamp(11));
                xissuing.setTime4Start(rs.getTimestamp(12));
                xissuing.setTime4End(rs.getTimestamp(13));
                xissuing.setTime5Start(rs.getTimestamp(14));
                xissuing.setTime5End(rs.getTimestamp(15));
                xissuing.setTime6Start(rs.getTimestamp(16));
                xissuing.setTime6End(rs.getTimestamp(17));
                xissuing.setTime7Start(rs.getTimestamp(18));
                xissuing.setTime7End(rs.getTimestamp(19));
                xissuing.setHours1Start(new Integer(rs.getInt(20)));
                xissuing.setHours1End(new Integer(rs.getInt(21)));
                xissuing.setHours2Start(new Integer(rs.getInt(22)));
                xissuing.setHours2End(new Integer(rs.getInt(23)));
                xissuing.setHours3Start(new Integer(rs.getInt(24)));
                xissuing.setHours3End(new Integer(rs.getInt(25)));
                xissuing.setHours4Start(new Integer(rs.getInt(26)));
                xissuing.setHours4End(new Integer(rs.getInt(27)));
                xissuing.setHours5Start(new Integer(rs.getInt(28)));
                xissuing.setHours5End(new Integer(rs.getInt(29)));
                xissuing.setHours6Start(new Integer(rs.getInt(30)));
                xissuing.setHours6End(new Integer(rs.getInt(31)));
                xissuing.setHours7Start(new Integer(rs.getInt(32)));
                xissuing.setHours7End(new Integer(rs.getInt(33)));
                xissuing.setLiters1Start(new Integer(rs.getInt(34)));
                xissuing.setLiters1End(new Integer(rs.getInt(35)));
                xissuing.setLiters2Start(new Integer(rs.getInt(36)));
                xissuing.setLiters2End(new Integer(rs.getInt(37)));
                xissuing.setLiters3Start(new Integer(rs.getInt(38)));
                xissuing.setLiters3End(new Integer(rs.getInt(39)));
                xissuing.setLiters4Start(new Integer(rs.getInt(40)));
                xissuing.setLiters4End(new Integer(rs.getInt(41)));
                xissuing.setLiters5Start(new Integer(rs.getInt(42)));
                xissuing.setLiters5End(new Integer(rs.getInt(43)));
                xissuing.setLiters6Start(new Integer(rs.getInt(44)));
                xissuing.setLiters6End(new Integer(rs.getInt(45)));
                xissuing.setLiters7Start(new Integer(rs.getInt(46)));
                xissuing.setLiters7End(new Integer(rs.getInt(47)));
                xissuing.setIssuedby1Start(new Integer(rs.getInt(48)));
                xissuing.setIssuedby1End(new Integer(rs.getInt(49)));
                xissuing.setIssuedby2Start(new Integer(rs.getInt(50)));
                xissuing.setIssuedby2End(new Integer(rs.getInt(51)));
                xissuing.setIssuedby3Start(new Integer(rs.getInt(52)));
                xissuing.setIssuedby3End(new Integer(rs.getInt(53)));
                xissuing.setIssuedby4Start(new Integer(rs.getInt(54)));
                xissuing.setIssuedby4End(new Integer(rs.getInt(55)));
                xissuing.setIssuedby5Start(new Integer(rs.getInt(56)));
                xissuing.setIssuedby5End(new Integer(rs.getInt(57)));
                xissuing.setIssuedby6Start(new Integer(rs.getInt(58)));
                xissuing.setIssuedby6End(new Integer(rs.getInt(59)));
                xissuing.setIssuedby7Start(new Integer(rs.getInt(60)));
                xissuing.setIssuedby7End(new Integer(rs.getInt(61)));
                xissuing.setNew(false);
            }
        } finally {
            try {
                if (rs != null) rs.close();
            } finally {
                if (ps != null) ps.close();
            }
        }
        return xissuing;
    }

    protected void insert() throws SQLException, ForeignKeyViolationException {
         if (getTriggers() != null) {
             getTriggers().beforeInsert(this);
         }
         PreparedStatement ps = null;
         String stmt =
                "INSERT INTO xissuing ("+(getXissuingId().intValue()!=0?"xissuing_id,":"")+"issueddate,operator_id,xmachine_id,xsite_id,time1_start,time1_end,time2_start,time2_end,time3_start,time3_end,time4_start,time4_end,time5_start,time5_end,time6_start,time6_end,time7_start,time7_end,hours1_start,hours1_end,hours2_start,hours2_end,hours3_start,hours3_end,hours4_start,hours4_end,hours5_start,hours5_end,hours6_start,hours6_end,hours7_start,hours7_end,liters1_start,liters1_end,liters2_start,liters2_end,liters3_start,liters3_end,liters4_start,liters4_end,liters5_start,liters5_end,liters6_start,liters6_end,liters7_start,liters7_end,issuedby1_start,issuedby1_end,issuedby2_start,issuedby2_end,issuedby3_start,issuedby3_end,issuedby4_start,issuedby4_end,issuedby5_start,issuedby5_end,issuedby6_start,issuedby6_end,issuedby7_start,issuedby7_end) values("+(getXissuingId().intValue()!=0?"?,":"")+"?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
         try {
             ps = getConnection().prepareStatement(stmt);
             int n = 0;
             if (getXissuingId().intValue()!=0) {
                 ps.setObject(++n, getXissuingId());
             }
             ps.setObject(++n, getIssueddate());
             ps.setObject(++n, getOperatorId());
             ps.setObject(++n, getXmachineId());
             ps.setObject(++n, getXsiteId());
             ps.setObject(++n, getTime1Start());
             ps.setObject(++n, getTime1End());
             ps.setObject(++n, getTime2Start());
             ps.setObject(++n, getTime2End());
             ps.setObject(++n, getTime3Start());
             ps.setObject(++n, getTime3End());
             ps.setObject(++n, getTime4Start());
             ps.setObject(++n, getTime4End());
             ps.setObject(++n, getTime5Start());
             ps.setObject(++n, getTime5End());
             ps.setObject(++n, getTime6Start());
             ps.setObject(++n, getTime6End());
             ps.setObject(++n, getTime7Start());
             ps.setObject(++n, getTime7End());
             ps.setObject(++n, getHours1Start());
             ps.setObject(++n, getHours1End());
             ps.setObject(++n, getHours2Start());
             ps.setObject(++n, getHours2End());
             ps.setObject(++n, getHours3Start());
             ps.setObject(++n, getHours3End());
             ps.setObject(++n, getHours4Start());
             ps.setObject(++n, getHours4End());
             ps.setObject(++n, getHours5Start());
             ps.setObject(++n, getHours5End());
             ps.setObject(++n, getHours6Start());
             ps.setObject(++n, getHours6End());
             ps.setObject(++n, getHours7Start());
             ps.setObject(++n, getHours7End());
             ps.setObject(++n, getLiters1Start());
             ps.setObject(++n, getLiters1End());
             ps.setObject(++n, getLiters2Start());
             ps.setObject(++n, getLiters2End());
             ps.setObject(++n, getLiters3Start());
             ps.setObject(++n, getLiters3End());
             ps.setObject(++n, getLiters4Start());
             ps.setObject(++n, getLiters4End());
             ps.setObject(++n, getLiters5Start());
             ps.setObject(++n, getLiters5End());
             ps.setObject(++n, getLiters6Start());
             ps.setObject(++n, getLiters6End());
             ps.setObject(++n, getLiters7Start());
             ps.setObject(++n, getLiters7End());
             ps.setObject(++n, getIssuedby1Start());
             ps.setObject(++n, getIssuedby1End());
             ps.setObject(++n, getIssuedby2Start());
             ps.setObject(++n, getIssuedby2End());
             ps.setObject(++n, getIssuedby3Start());
             ps.setObject(++n, getIssuedby3End());
             ps.setObject(++n, getIssuedby4Start());
             ps.setObject(++n, getIssuedby4End());
             ps.setObject(++n, getIssuedby5Start());
             ps.setObject(++n, getIssuedby5End());
             ps.setObject(++n, getIssuedby6Start());
             ps.setObject(++n, getIssuedby6End());
             ps.setObject(++n, getIssuedby7Start());
             ps.setObject(++n, getIssuedby7End());
             ps.execute();
         } finally {
             if (ps != null) ps.close();
         }
         ResultSet rs = null;
         if (getXissuingId().intValue()==0) {
             stmt = "SELECT max(xissuing_id) FROM xissuing";
             try {
                 ps = getConnection().prepareStatement(stmt);
                 rs = ps.executeQuery();
                 if (rs.next()) {
                     setXissuingId(new Integer(rs.getInt(1)));
                 }
             } finally {
                 try {
                     if (rs != null) rs.close();
                 } finally {
                     if (ps != null) ps.close();
                 }
             }
         }
         setNew(false);
         setWasChanged(false);
         if (getTriggers() != null) {
             getTriggers().afterInsert(this);
         }
    }

    public void save() throws SQLException, ForeignKeyViolationException {
        if (isNew()) {
            insert();
        } else {
            if (getTriggers() != null) {
                getTriggers().beforeUpdate(this);
            }
            PreparedStatement ps = null;
            String stmt =
                    "UPDATE xissuing " +
                    "SET issueddate = ?, operator_id = ?, xmachine_id = ?, xsite_id = ?, time1_start = ?, time1_end = ?, time2_start = ?, time2_end = ?, time3_start = ?, time3_end = ?, time4_start = ?, time4_end = ?, time5_start = ?, time5_end = ?, time6_start = ?, time6_end = ?, time7_start = ?, time7_end = ?, hours1_start = ?, hours1_end = ?, hours2_start = ?, hours2_end = ?, hours3_start = ?, hours3_end = ?, hours4_start = ?, hours4_end = ?, hours5_start = ?, hours5_end = ?, hours6_start = ?, hours6_end = ?, hours7_start = ?, hours7_end = ?, liters1_start = ?, liters1_end = ?, liters2_start = ?, liters2_end = ?, liters3_start = ?, liters3_end = ?, liters4_start = ?, liters4_end = ?, liters5_start = ?, liters5_end = ?, liters6_start = ?, liters6_end = ?, liters7_start = ?, liters7_end = ?, issuedby1_start = ?, issuedby1_end = ?, issuedby2_start = ?, issuedby2_end = ?, issuedby3_start = ?, issuedby3_end = ?, issuedby4_start = ?, issuedby4_end = ?, issuedby5_start = ?, issuedby5_end = ?, issuedby6_start = ?, issuedby6_end = ?, issuedby7_start = ?, issuedby7_end = ?" + 
                    " WHERE xissuing_id = " + getXissuingId();
            try {
                ps = getConnection().prepareStatement(stmt);
                ps.setObject(1, getIssueddate());
                ps.setObject(2, getOperatorId());
                ps.setObject(3, getXmachineId());
                ps.setObject(4, getXsiteId());
                ps.setObject(5, getTime1Start());
                ps.setObject(6, getTime1End());
                ps.setObject(7, getTime2Start());
                ps.setObject(8, getTime2End());
                ps.setObject(9, getTime3Start());
                ps.setObject(10, getTime3End());
                ps.setObject(11, getTime4Start());
                ps.setObject(12, getTime4End());
                ps.setObject(13, getTime5Start());
                ps.setObject(14, getTime5End());
                ps.setObject(15, getTime6Start());
                ps.setObject(16, getTime6End());
                ps.setObject(17, getTime7Start());
                ps.setObject(18, getTime7End());
                ps.setObject(19, getHours1Start());
                ps.setObject(20, getHours1End());
                ps.setObject(21, getHours2Start());
                ps.setObject(22, getHours2End());
                ps.setObject(23, getHours3Start());
                ps.setObject(24, getHours3End());
                ps.setObject(25, getHours4Start());
                ps.setObject(26, getHours4End());
                ps.setObject(27, getHours5Start());
                ps.setObject(28, getHours5End());
                ps.setObject(29, getHours6Start());
                ps.setObject(30, getHours6End());
                ps.setObject(31, getHours7Start());
                ps.setObject(32, getHours7End());
                ps.setObject(33, getLiters1Start());
                ps.setObject(34, getLiters1End());
                ps.setObject(35, getLiters2Start());
                ps.setObject(36, getLiters2End());
                ps.setObject(37, getLiters3Start());
                ps.setObject(38, getLiters3End());
                ps.setObject(39, getLiters4Start());
                ps.setObject(40, getLiters4End());
                ps.setObject(41, getLiters5Start());
                ps.setObject(42, getLiters5End());
                ps.setObject(43, getLiters6Start());
                ps.setObject(44, getLiters6End());
                ps.setObject(45, getLiters7Start());
                ps.setObject(46, getLiters7End());
                ps.setObject(47, getIssuedby1Start());
                ps.setObject(48, getIssuedby1End());
                ps.setObject(49, getIssuedby2Start());
                ps.setObject(50, getIssuedby2End());
                ps.setObject(51, getIssuedby3Start());
                ps.setObject(52, getIssuedby3End());
                ps.setObject(53, getIssuedby4Start());
                ps.setObject(54, getIssuedby4End());
                ps.setObject(55, getIssuedby5Start());
                ps.setObject(56, getIssuedby5End());
                ps.setObject(57, getIssuedby6Start());
                ps.setObject(58, getIssuedby6End());
                ps.setObject(59, getIssuedby7Start());
                ps.setObject(60, getIssuedby7End());
                ps.execute();
            } finally {
                if (ps != null) ps.close();
            }
            setWasChanged(false);
            if (getTriggers() != null) {
                getTriggers().afterUpdate(this);
            }
        }
    }

    public void delete() throws SQLException, ForeignKeyViolationException {
        if (getTriggers() != null) {
            getTriggers().beforeDelete(this);
        }
        PreparedStatement ps = null;
        String stmt =
                "DELETE FROM xissuing " +
                "WHERE xissuing_id = " + getXissuingId();
        try {
            ps = getConnection().prepareStatement(stmt);
            ps.execute();
        } finally {
            if (ps != null) ps.close();
        }
        setXissuingId(new Integer(-getXissuingId().intValue()));
        if (getTriggers() != null) {
            getTriggers().afterDelete(this);
        }
    }

    public boolean isDeleted() {
        return (getXissuingId().intValue() < 0);
    }

    public static DbObject[] load(Connection con,String whereCondition,String orderCondition) throws SQLException {
        ArrayList lst = new ArrayList();
        PreparedStatement ps = null;
        ResultSet rs = null;
        String stmt = "SELECT xissuing_id,issueddate,operator_id,xmachine_id,xsite_id,time1_start,time1_end,time2_start,time2_end,time3_start,time3_end,time4_start,time4_end,time5_start,time5_end,time6_start,time6_end,time7_start,time7_end,hours1_start,hours1_end,hours2_start,hours2_end,hours3_start,hours3_end,hours4_start,hours4_end,hours5_start,hours5_end,hours6_start,hours6_end,hours7_start,hours7_end,liters1_start,liters1_end,liters2_start,liters2_end,liters3_start,liters3_end,liters4_start,liters4_end,liters5_start,liters5_end,liters6_start,liters6_end,liters7_start,liters7_end,issuedby1_start,issuedby1_end,issuedby2_start,issuedby2_end,issuedby3_start,issuedby3_end,issuedby4_start,issuedby4_end,issuedby5_start,issuedby5_end,issuedby6_start,issuedby6_end,issuedby7_start,issuedby7_end FROM xissuing " +
                ((whereCondition != null && whereCondition.length() > 0) ?
                " WHERE " + whereCondition : "") +
                ((orderCondition != null && orderCondition.length() > 0) ?
                " ORDER BY " + orderCondition : "");
        try {
            ps = con.prepareStatement(stmt);
            rs = ps.executeQuery();
            while (rs.next()) {
                DbObject dbObj;
                lst.add(dbObj=new Xissuing(con,new Integer(rs.getInt(1)),rs.getDate(2),new Integer(rs.getInt(3)),new Integer(rs.getInt(4)),new Integer(rs.getInt(5)),rs.getTimestamp(6),rs.getTimestamp(7),rs.getTimestamp(8),rs.getTimestamp(9),rs.getTimestamp(10),rs.getTimestamp(11),rs.getTimestamp(12),rs.getTimestamp(13),rs.getTimestamp(14),rs.getTimestamp(15),rs.getTimestamp(16),rs.getTimestamp(17),rs.getTimestamp(18),rs.getTimestamp(19),new Integer(rs.getInt(20)),new Integer(rs.getInt(21)),new Integer(rs.getInt(22)),new Integer(rs.getInt(23)),new Integer(rs.getInt(24)),new Integer(rs.getInt(25)),new Integer(rs.getInt(26)),new Integer(rs.getInt(27)),new Integer(rs.getInt(28)),new Integer(rs.getInt(29)),new Integer(rs.getInt(30)),new Integer(rs.getInt(31)),new Integer(rs.getInt(32)),new Integer(rs.getInt(33)),new Integer(rs.getInt(34)),new Integer(rs.getInt(35)),new Integer(rs.getInt(36)),new Integer(rs.getInt(37)),new Integer(rs.getInt(38)),new Integer(rs.getInt(39)),new Integer(rs.getInt(40)),new Integer(rs.getInt(41)),new Integer(rs.getInt(42)),new Integer(rs.getInt(43)),new Integer(rs.getInt(44)),new Integer(rs.getInt(45)),new Integer(rs.getInt(46)),new Integer(rs.getInt(47)),new Integer(rs.getInt(48)),new Integer(rs.getInt(49)),new Integer(rs.getInt(50)),new Integer(rs.getInt(51)),new Integer(rs.getInt(52)),new Integer(rs.getInt(53)),new Integer(rs.getInt(54)),new Integer(rs.getInt(55)),new Integer(rs.getInt(56)),new Integer(rs.getInt(57)),new Integer(rs.getInt(58)),new Integer(rs.getInt(59)),new Integer(rs.getInt(60)),new Integer(rs.getInt(61))));
                dbObj.setNew(false);
            }
        } finally {
            try {
                if (rs != null) rs.close();
            } finally {
                if (ps != null) ps.close();
            }
        }
        Xissuing[] objects = new Xissuing[lst.size()];
        for (int i = 0; i < lst.size(); i++) {
            Xissuing xissuing = (Xissuing) lst.get(i);
            objects[i] = xissuing;
        }
        return objects;
    }

    public static boolean exists(Connection con, String whereCondition) throws SQLException {
        if (con == null) {
            return true;
        }
        boolean ok = false;
        PreparedStatement ps = null;
        ResultSet rs = null;
        String stmt = "SELECT xissuing_id FROM xissuing " +
                ((whereCondition != null && whereCondition.length() > 0) ?
                "WHERE " + whereCondition : "");
        try {
            ps = con.prepareStatement(stmt);
            rs = ps.executeQuery();
            ok = rs.next();
        } finally {
            try {
                if (rs != null) rs.close();
            } finally {
                if (ps != null) ps.close();
            }
        }
        return ok;
    }

    //public String toString() {
    //    return getXissuingId() + getDelimiter();
    //}

    public Integer getXissuingId() {
        return xissuingId;
    }

    public void setXissuingId(Integer xissuingId) throws ForeignKeyViolationException {
        setWasChanged(this.xissuingId != null && this.xissuingId != xissuingId);
        this.xissuingId = xissuingId;
        setNew(xissuingId.intValue() == 0);
    }

    public Date getIssueddate() {
        return issueddate;
    }

    public void setIssueddate(Date issueddate) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.issueddate != null && !this.issueddate.equals(issueddate));
        this.issueddate = issueddate;
    }

    public Integer getOperatorId() {
        return operatorId;
    }

    public void setOperatorId(Integer operatorId) throws SQLException, ForeignKeyViolationException {
        if (operatorId!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + operatorId)) {
            throw new ForeignKeyViolationException("Can't set operator_id, foreign key violation: xissuing_xemployee_fk");
        }
        setWasChanged(this.operatorId != null && !this.operatorId.equals(operatorId));
        this.operatorId = operatorId;
    }

    public Integer getXmachineId() {
        return xmachineId;
    }

    public void setXmachineId(Integer xmachineId) throws SQLException, ForeignKeyViolationException {
        if (xmachineId!=null && !Xmachine.exists(getConnection(),"xmachine_id = " + xmachineId)) {
            throw new ForeignKeyViolationException("Can't set xmachine_id, foreign key violation: xissuing_xmachine_fk");
        }
        setWasChanged(this.xmachineId != null && !this.xmachineId.equals(xmachineId));
        this.xmachineId = xmachineId;
    }

    public Integer getXsiteId() {
        return xsiteId;
    }

    public void setXsiteId(Integer xsiteId) throws SQLException, ForeignKeyViolationException {
        if (xsiteId!=null && !Xsite.exists(getConnection(),"xsite_id = " + xsiteId)) {
            throw new ForeignKeyViolationException("Can't set xsite_id, foreign key violation: xissuing_xsite_fk");
        }
        setWasChanged(this.xsiteId != null && !this.xsiteId.equals(xsiteId));
        this.xsiteId = xsiteId;
    }

    public Timestamp getTime1Start() {
        return time1Start;
    }

    public void setTime1Start(Timestamp time1Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time1Start != null && !this.time1Start.equals(time1Start));
        this.time1Start = time1Start;
    }

    public Timestamp getTime1End() {
        return time1End;
    }

    public void setTime1End(Timestamp time1End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time1End != null && !this.time1End.equals(time1End));
        this.time1End = time1End;
    }

    public Timestamp getTime2Start() {
        return time2Start;
    }

    public void setTime2Start(Timestamp time2Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time2Start != null && !this.time2Start.equals(time2Start));
        this.time2Start = time2Start;
    }

    public Timestamp getTime2End() {
        return time2End;
    }

    public void setTime2End(Timestamp time2End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time2End != null && !this.time2End.equals(time2End));
        this.time2End = time2End;
    }

    public Timestamp getTime3Start() {
        return time3Start;
    }

    public void setTime3Start(Timestamp time3Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time3Start != null && !this.time3Start.equals(time3Start));
        this.time3Start = time3Start;
    }

    public Timestamp getTime3End() {
        return time3End;
    }

    public void setTime3End(Timestamp time3End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time3End != null && !this.time3End.equals(time3End));
        this.time3End = time3End;
    }

    public Timestamp getTime4Start() {
        return time4Start;
    }

    public void setTime4Start(Timestamp time4Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time4Start != null && !this.time4Start.equals(time4Start));
        this.time4Start = time4Start;
    }

    public Timestamp getTime4End() {
        return time4End;
    }

    public void setTime4End(Timestamp time4End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time4End != null && !this.time4End.equals(time4End));
        this.time4End = time4End;
    }

    public Timestamp getTime5Start() {
        return time5Start;
    }

    public void setTime5Start(Timestamp time5Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time5Start != null && !this.time5Start.equals(time5Start));
        this.time5Start = time5Start;
    }

    public Timestamp getTime5End() {
        return time5End;
    }

    public void setTime5End(Timestamp time5End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time5End != null && !this.time5End.equals(time5End));
        this.time5End = time5End;
    }

    public Timestamp getTime6Start() {
        return time6Start;
    }

    public void setTime6Start(Timestamp time6Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time6Start != null && !this.time6Start.equals(time6Start));
        this.time6Start = time6Start;
    }

    public Timestamp getTime6End() {
        return time6End;
    }

    public void setTime6End(Timestamp time6End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time6End != null && !this.time6End.equals(time6End));
        this.time6End = time6End;
    }

    public Timestamp getTime7Start() {
        return time7Start;
    }

    public void setTime7Start(Timestamp time7Start) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time7Start != null && !this.time7Start.equals(time7Start));
        this.time7Start = time7Start;
    }

    public Timestamp getTime7End() {
        return time7End;
    }

    public void setTime7End(Timestamp time7End) throws SQLException, ForeignKeyViolationException {
        setWasChanged(this.time7End != null && !this.time7End.equals(time7End));
        this.time7End = time7End;
    }

    public Integer getHours1Start() {
        return hours1Start;
    }

    public void setHours1Start(Integer hours1Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours1Start)
            hours1Start = hours1Start == 0 ? null : hours1Start;
        setWasChanged(this.hours1Start != null && !this.hours1Start.equals(hours1Start));
        this.hours1Start = hours1Start;
    }

    public Integer getHours1End() {
        return hours1End;
    }

    public void setHours1End(Integer hours1End) throws SQLException, ForeignKeyViolationException {
        if (null != hours1End)
            hours1End = hours1End == 0 ? null : hours1End;
        setWasChanged(this.hours1End != null && !this.hours1End.equals(hours1End));
        this.hours1End = hours1End;
    }

    public Integer getHours2Start() {
        return hours2Start;
    }

    public void setHours2Start(Integer hours2Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours2Start)
            hours2Start = hours2Start == 0 ? null : hours2Start;
        setWasChanged(this.hours2Start != null && !this.hours2Start.equals(hours2Start));
        this.hours2Start = hours2Start;
    }

    public Integer getHours2End() {
        return hours2End;
    }

    public void setHours2End(Integer hours2End) throws SQLException, ForeignKeyViolationException {
        if (null != hours2End)
            hours2End = hours2End == 0 ? null : hours2End;
        setWasChanged(this.hours2End != null && !this.hours2End.equals(hours2End));
        this.hours2End = hours2End;
    }

    public Integer getHours3Start() {
        return hours3Start;
    }

    public void setHours3Start(Integer hours3Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours3Start)
            hours3Start = hours3Start == 0 ? null : hours3Start;
        setWasChanged(this.hours3Start != null && !this.hours3Start.equals(hours3Start));
        this.hours3Start = hours3Start;
    }

    public Integer getHours3End() {
        return hours3End;
    }

    public void setHours3End(Integer hours3End) throws SQLException, ForeignKeyViolationException {
        if (null != hours3End)
            hours3End = hours3End == 0 ? null : hours3End;
        setWasChanged(this.hours3End != null && !this.hours3End.equals(hours3End));
        this.hours3End = hours3End;
    }

    public Integer getHours4Start() {
        return hours4Start;
    }

    public void setHours4Start(Integer hours4Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours4Start)
            hours4Start = hours4Start == 0 ? null : hours4Start;
        setWasChanged(this.hours4Start != null && !this.hours4Start.equals(hours4Start));
        this.hours4Start = hours4Start;
    }

    public Integer getHours4End() {
        return hours4End;
    }

    public void setHours4End(Integer hours4End) throws SQLException, ForeignKeyViolationException {
        if (null != hours4End)
            hours4End = hours4End == 0 ? null : hours4End;
        setWasChanged(this.hours4End != null && !this.hours4End.equals(hours4End));
        this.hours4End = hours4End;
    }

    public Integer getHours5Start() {
        return hours5Start;
    }

    public void setHours5Start(Integer hours5Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours5Start)
            hours5Start = hours5Start == 0 ? null : hours5Start;
        setWasChanged(this.hours5Start != null && !this.hours5Start.equals(hours5Start));
        this.hours5Start = hours5Start;
    }

    public Integer getHours5End() {
        return hours5End;
    }

    public void setHours5End(Integer hours5End) throws SQLException, ForeignKeyViolationException {
        if (null != hours5End)
            hours5End = hours5End == 0 ? null : hours5End;
        setWasChanged(this.hours5End != null && !this.hours5End.equals(hours5End));
        this.hours5End = hours5End;
    }

    public Integer getHours6Start() {
        return hours6Start;
    }

    public void setHours6Start(Integer hours6Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours6Start)
            hours6Start = hours6Start == 0 ? null : hours6Start;
        setWasChanged(this.hours6Start != null && !this.hours6Start.equals(hours6Start));
        this.hours6Start = hours6Start;
    }

    public Integer getHours6End() {
        return hours6End;
    }

    public void setHours6End(Integer hours6End) throws SQLException, ForeignKeyViolationException {
        if (null != hours6End)
            hours6End = hours6End == 0 ? null : hours6End;
        setWasChanged(this.hours6End != null && !this.hours6End.equals(hours6End));
        this.hours6End = hours6End;
    }

    public Integer getHours7Start() {
        return hours7Start;
    }

    public void setHours7Start(Integer hours7Start) throws SQLException, ForeignKeyViolationException {
        if (null != hours7Start)
            hours7Start = hours7Start == 0 ? null : hours7Start;
        setWasChanged(this.hours7Start != null && !this.hours7Start.equals(hours7Start));
        this.hours7Start = hours7Start;
    }

    public Integer getHours7End() {
        return hours7End;
    }

    public void setHours7End(Integer hours7End) throws SQLException, ForeignKeyViolationException {
        if (null != hours7End)
            hours7End = hours7End == 0 ? null : hours7End;
        setWasChanged(this.hours7End != null && !this.hours7End.equals(hours7End));
        this.hours7End = hours7End;
    }

    public Integer getLiters1Start() {
        return liters1Start;
    }

    public void setLiters1Start(Integer liters1Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters1Start)
            liters1Start = liters1Start == 0 ? null : liters1Start;
        setWasChanged(this.liters1Start != null && !this.liters1Start.equals(liters1Start));
        this.liters1Start = liters1Start;
    }

    public Integer getLiters1End() {
        return liters1End;
    }

    public void setLiters1End(Integer liters1End) throws SQLException, ForeignKeyViolationException {
        if (null != liters1End)
            liters1End = liters1End == 0 ? null : liters1End;
        setWasChanged(this.liters1End != null && !this.liters1End.equals(liters1End));
        this.liters1End = liters1End;
    }

    public Integer getLiters2Start() {
        return liters2Start;
    }

    public void setLiters2Start(Integer liters2Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters2Start)
            liters2Start = liters2Start == 0 ? null : liters2Start;
        setWasChanged(this.liters2Start != null && !this.liters2Start.equals(liters2Start));
        this.liters2Start = liters2Start;
    }

    public Integer getLiters2End() {
        return liters2End;
    }

    public void setLiters2End(Integer liters2End) throws SQLException, ForeignKeyViolationException {
        if (null != liters2End)
            liters2End = liters2End == 0 ? null : liters2End;
        setWasChanged(this.liters2End != null && !this.liters2End.equals(liters2End));
        this.liters2End = liters2End;
    }

    public Integer getLiters3Start() {
        return liters3Start;
    }

    public void setLiters3Start(Integer liters3Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters3Start)
            liters3Start = liters3Start == 0 ? null : liters3Start;
        setWasChanged(this.liters3Start != null && !this.liters3Start.equals(liters3Start));
        this.liters3Start = liters3Start;
    }

    public Integer getLiters3End() {
        return liters3End;
    }

    public void setLiters3End(Integer liters3End) throws SQLException, ForeignKeyViolationException {
        if (null != liters3End)
            liters3End = liters3End == 0 ? null : liters3End;
        setWasChanged(this.liters3End != null && !this.liters3End.equals(liters3End));
        this.liters3End = liters3End;
    }

    public Integer getLiters4Start() {
        return liters4Start;
    }

    public void setLiters4Start(Integer liters4Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters4Start)
            liters4Start = liters4Start == 0 ? null : liters4Start;
        setWasChanged(this.liters4Start != null && !this.liters4Start.equals(liters4Start));
        this.liters4Start = liters4Start;
    }

    public Integer getLiters4End() {
        return liters4End;
    }

    public void setLiters4End(Integer liters4End) throws SQLException, ForeignKeyViolationException {
        if (null != liters4End)
            liters4End = liters4End == 0 ? null : liters4End;
        setWasChanged(this.liters4End != null && !this.liters4End.equals(liters4End));
        this.liters4End = liters4End;
    }

    public Integer getLiters5Start() {
        return liters5Start;
    }

    public void setLiters5Start(Integer liters5Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters5Start)
            liters5Start = liters5Start == 0 ? null : liters5Start;
        setWasChanged(this.liters5Start != null && !this.liters5Start.equals(liters5Start));
        this.liters5Start = liters5Start;
    }

    public Integer getLiters5End() {
        return liters5End;
    }

    public void setLiters5End(Integer liters5End) throws SQLException, ForeignKeyViolationException {
        if (null != liters5End)
            liters5End = liters5End == 0 ? null : liters5End;
        setWasChanged(this.liters5End != null && !this.liters5End.equals(liters5End));
        this.liters5End = liters5End;
    }

    public Integer getLiters6Start() {
        return liters6Start;
    }

    public void setLiters6Start(Integer liters6Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters6Start)
            liters6Start = liters6Start == 0 ? null : liters6Start;
        setWasChanged(this.liters6Start != null && !this.liters6Start.equals(liters6Start));
        this.liters6Start = liters6Start;
    }

    public Integer getLiters6End() {
        return liters6End;
    }

    public void setLiters6End(Integer liters6End) throws SQLException, ForeignKeyViolationException {
        if (null != liters6End)
            liters6End = liters6End == 0 ? null : liters6End;
        setWasChanged(this.liters6End != null && !this.liters6End.equals(liters6End));
        this.liters6End = liters6End;
    }

    public Integer getLiters7Start() {
        return liters7Start;
    }

    public void setLiters7Start(Integer liters7Start) throws SQLException, ForeignKeyViolationException {
        if (null != liters7Start)
            liters7Start = liters7Start == 0 ? null : liters7Start;
        setWasChanged(this.liters7Start != null && !this.liters7Start.equals(liters7Start));
        this.liters7Start = liters7Start;
    }

    public Integer getLiters7End() {
        return liters7End;
    }

    public void setLiters7End(Integer liters7End) throws SQLException, ForeignKeyViolationException {
        if (null != liters7End)
            liters7End = liters7End == 0 ? null : liters7End;
        setWasChanged(this.liters7End != null && !this.liters7End.equals(liters7End));
        this.liters7End = liters7End;
    }

    public Integer getIssuedby1Start() {
        return issuedby1Start;
    }

    public void setIssuedby1Start(Integer issuedby1Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby1Start)
            issuedby1Start = issuedby1Start == 0 ? null : issuedby1Start;
        if (issuedby1Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby1Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby1_start, foreign key violation: xissuing_xemployee_fk1s");
        }
        setWasChanged(this.issuedby1Start != null && !this.issuedby1Start.equals(issuedby1Start));
        this.issuedby1Start = issuedby1Start;
    }

    public Integer getIssuedby1End() {
        return issuedby1End;
    }

    public void setIssuedby1End(Integer issuedby1End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby1End)
            issuedby1End = issuedby1End == 0 ? null : issuedby1End;
        if (issuedby1End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby1End)) {
            throw new ForeignKeyViolationException("Can't set issuedby1_end, foreign key violation: xissuing_xemployee_fk1e");
        }
        setWasChanged(this.issuedby1End != null && !this.issuedby1End.equals(issuedby1End));
        this.issuedby1End = issuedby1End;
    }

    public Integer getIssuedby2Start() {
        return issuedby2Start;
    }

    public void setIssuedby2Start(Integer issuedby2Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby2Start)
            issuedby2Start = issuedby2Start == 0 ? null : issuedby2Start;
        if (issuedby2Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby2Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby2_start, foreign key violation: xissuing_xemployee_fk2s");
        }
        setWasChanged(this.issuedby2Start != null && !this.issuedby2Start.equals(issuedby2Start));
        this.issuedby2Start = issuedby2Start;
    }

    public Integer getIssuedby2End() {
        return issuedby2End;
    }

    public void setIssuedby2End(Integer issuedby2End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby2End)
            issuedby2End = issuedby2End == 0 ? null : issuedby2End;
        if (issuedby2End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby2End)) {
            throw new ForeignKeyViolationException("Can't set issuedby2_end, foreign key violation: xissuing_xemployee_fk2e");
        }
        setWasChanged(this.issuedby2End != null && !this.issuedby2End.equals(issuedby2End));
        this.issuedby2End = issuedby2End;
    }

    public Integer getIssuedby3Start() {
        return issuedby3Start;
    }

    public void setIssuedby3Start(Integer issuedby3Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby3Start)
            issuedby3Start = issuedby3Start == 0 ? null : issuedby3Start;
        if (issuedby3Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby3Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby3_start, foreign key violation: xissuing_xemployee_fk3s");
        }
        setWasChanged(this.issuedby3Start != null && !this.issuedby3Start.equals(issuedby3Start));
        this.issuedby3Start = issuedby3Start;
    }

    public Integer getIssuedby3End() {
        return issuedby3End;
    }

    public void setIssuedby3End(Integer issuedby3End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby3End)
            issuedby3End = issuedby3End == 0 ? null : issuedby3End;
        if (issuedby3End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby3End)) {
            throw new ForeignKeyViolationException("Can't set issuedby3_end, foreign key violation: xissuing_xemployee_fk3e");
        }
        setWasChanged(this.issuedby3End != null && !this.issuedby3End.equals(issuedby3End));
        this.issuedby3End = issuedby3End;
    }

    public Integer getIssuedby4Start() {
        return issuedby4Start;
    }

    public void setIssuedby4Start(Integer issuedby4Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby4Start)
            issuedby4Start = issuedby4Start == 0 ? null : issuedby4Start;
        if (issuedby4Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby4Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby4_start, foreign key violation: xissuing_xemployee_fk4s");
        }
        setWasChanged(this.issuedby4Start != null && !this.issuedby4Start.equals(issuedby4Start));
        this.issuedby4Start = issuedby4Start;
    }

    public Integer getIssuedby4End() {
        return issuedby4End;
    }

    public void setIssuedby4End(Integer issuedby4End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby4End)
            issuedby4End = issuedby4End == 0 ? null : issuedby4End;
        if (issuedby4End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby4End)) {
            throw new ForeignKeyViolationException("Can't set issuedby4_end, foreign key violation: xissuing_xemployee_fk4e");
        }
        setWasChanged(this.issuedby4End != null && !this.issuedby4End.equals(issuedby4End));
        this.issuedby4End = issuedby4End;
    }

    public Integer getIssuedby5Start() {
        return issuedby5Start;
    }

    public void setIssuedby5Start(Integer issuedby5Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby5Start)
            issuedby5Start = issuedby5Start == 0 ? null : issuedby5Start;
        if (issuedby5Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby5Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby5_start, foreign key violation: xissuing_xemployee_fk5s");
        }
        setWasChanged(this.issuedby5Start != null && !this.issuedby5Start.equals(issuedby5Start));
        this.issuedby5Start = issuedby5Start;
    }

    public Integer getIssuedby5End() {
        return issuedby5End;
    }

    public void setIssuedby5End(Integer issuedby5End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby5End)
            issuedby5End = issuedby5End == 0 ? null : issuedby5End;
        if (issuedby5End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby5End)) {
            throw new ForeignKeyViolationException("Can't set issuedby5_end, foreign key violation: xissuing_xemployee_fk5e");
        }
        setWasChanged(this.issuedby5End != null && !this.issuedby5End.equals(issuedby5End));
        this.issuedby5End = issuedby5End;
    }

    public Integer getIssuedby6Start() {
        return issuedby6Start;
    }

    public void setIssuedby6Start(Integer issuedby6Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby6Start)
            issuedby6Start = issuedby6Start == 0 ? null : issuedby6Start;
        if (issuedby6Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby6Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby6_start, foreign key violation: xissuing_xemployee_fk6s");
        }
        setWasChanged(this.issuedby6Start != null && !this.issuedby6Start.equals(issuedby6Start));
        this.issuedby6Start = issuedby6Start;
    }

    public Integer getIssuedby6End() {
        return issuedby6End;
    }

    public void setIssuedby6End(Integer issuedby6End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby6End)
            issuedby6End = issuedby6End == 0 ? null : issuedby6End;
        if (issuedby6End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby6End)) {
            throw new ForeignKeyViolationException("Can't set issuedby6_end, foreign key violation: xissuing_xemployee_fk6e");
        }
        setWasChanged(this.issuedby6End != null && !this.issuedby6End.equals(issuedby6End));
        this.issuedby6End = issuedby6End;
    }

    public Integer getIssuedby7Start() {
        return issuedby7Start;
    }

    public void setIssuedby7Start(Integer issuedby7Start) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby7Start)
            issuedby7Start = issuedby7Start == 0 ? null : issuedby7Start;
        if (issuedby7Start!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby7Start)) {
            throw new ForeignKeyViolationException("Can't set issuedby7_start, foreign key violation: xissuing_xemployee_fk7s");
        }
        setWasChanged(this.issuedby7Start != null && !this.issuedby7Start.equals(issuedby7Start));
        this.issuedby7Start = issuedby7Start;
    }

    public Integer getIssuedby7End() {
        return issuedby7End;
    }

    public void setIssuedby7End(Integer issuedby7End) throws SQLException, ForeignKeyViolationException {
        if (null != issuedby7End)
            issuedby7End = issuedby7End == 0 ? null : issuedby7End;
        if (issuedby7End!=null && !Xemployee.exists(getConnection(),"xemployee_id = " + issuedby7End)) {
            throw new ForeignKeyViolationException("Can't set issuedby7_end, foreign key violation: xissuing_xemployee_fk7e");
        }
        setWasChanged(this.issuedby7End != null && !this.issuedby7End.equals(issuedby7End));
        this.issuedby7End = issuedby7End;
    }
    public Object[] getAsRow() {
        Object[] columnValues = new Object[61];
        columnValues[0] = getXissuingId();
        columnValues[1] = getIssueddate();
        columnValues[2] = getOperatorId();
        columnValues[3] = getXmachineId();
        columnValues[4] = getXsiteId();
        columnValues[5] = getTime1Start();
        columnValues[6] = getTime1End();
        columnValues[7] = getTime2Start();
        columnValues[8] = getTime2End();
        columnValues[9] = getTime3Start();
        columnValues[10] = getTime3End();
        columnValues[11] = getTime4Start();
        columnValues[12] = getTime4End();
        columnValues[13] = getTime5Start();
        columnValues[14] = getTime5End();
        columnValues[15] = getTime6Start();
        columnValues[16] = getTime6End();
        columnValues[17] = getTime7Start();
        columnValues[18] = getTime7End();
        columnValues[19] = getHours1Start();
        columnValues[20] = getHours1End();
        columnValues[21] = getHours2Start();
        columnValues[22] = getHours2End();
        columnValues[23] = getHours3Start();
        columnValues[24] = getHours3End();
        columnValues[25] = getHours4Start();
        columnValues[26] = getHours4End();
        columnValues[27] = getHours5Start();
        columnValues[28] = getHours5End();
        columnValues[29] = getHours6Start();
        columnValues[30] = getHours6End();
        columnValues[31] = getHours7Start();
        columnValues[32] = getHours7End();
        columnValues[33] = getLiters1Start();
        columnValues[34] = getLiters1End();
        columnValues[35] = getLiters2Start();
        columnValues[36] = getLiters2End();
        columnValues[37] = getLiters3Start();
        columnValues[38] = getLiters3End();
        columnValues[39] = getLiters4Start();
        columnValues[40] = getLiters4End();
        columnValues[41] = getLiters5Start();
        columnValues[42] = getLiters5End();
        columnValues[43] = getLiters6Start();
        columnValues[44] = getLiters6End();
        columnValues[45] = getLiters7Start();
        columnValues[46] = getLiters7End();
        columnValues[47] = getIssuedby1Start();
        columnValues[48] = getIssuedby1End();
        columnValues[49] = getIssuedby2Start();
        columnValues[50] = getIssuedby2End();
        columnValues[51] = getIssuedby3Start();
        columnValues[52] = getIssuedby3End();
        columnValues[53] = getIssuedby4Start();
        columnValues[54] = getIssuedby4End();
        columnValues[55] = getIssuedby5Start();
        columnValues[56] = getIssuedby5End();
        columnValues[57] = getIssuedby6Start();
        columnValues[58] = getIssuedby6End();
        columnValues[59] = getIssuedby7Start();
        columnValues[60] = getIssuedby7End();
        return columnValues;
    }

    public static void setTriggers(Triggers triggers) {
        activeTriggers = triggers;
    }

    public static Triggers getTriggers() {
        return activeTriggers;
    }

    //for SOAP exhange
    @Override
    public void fillFromString(String row) throws ForeignKeyViolationException, SQLException {
        String[] flds = splitStr(row, delimiter);
        try {
            setXissuingId(Integer.parseInt(flds[0]));
        } catch(NumberFormatException ne) {
            setXissuingId(null);
        }
        setIssueddate(toDate(flds[1]));
        try {
            setOperatorId(Integer.parseInt(flds[2]));
        } catch(NumberFormatException ne) {
            setOperatorId(null);
        }
        try {
            setXmachineId(Integer.parseInt(flds[3]));
        } catch(NumberFormatException ne) {
            setXmachineId(null);
        }
        try {
            setXsiteId(Integer.parseInt(flds[4]));
        } catch(NumberFormatException ne) {
            setXsiteId(null);
        }
        setTime1Start(toTimeStamp(flds[5]));
        setTime1End(toTimeStamp(flds[6]));
        setTime2Start(toTimeStamp(flds[7]));
        setTime2End(toTimeStamp(flds[8]));
        setTime3Start(toTimeStamp(flds[9]));
        setTime3End(toTimeStamp(flds[10]));
        setTime4Start(toTimeStamp(flds[11]));
        setTime4End(toTimeStamp(flds[12]));
        setTime5Start(toTimeStamp(flds[13]));
        setTime5End(toTimeStamp(flds[14]));
        setTime6Start(toTimeStamp(flds[15]));
        setTime6End(toTimeStamp(flds[16]));
        setTime7Start(toTimeStamp(flds[17]));
        setTime7End(toTimeStamp(flds[18]));
        try {
            setHours1Start(Integer.parseInt(flds[19]));
        } catch(NumberFormatException ne) {
            setHours1Start(null);
        }
        try {
            setHours1End(Integer.parseInt(flds[20]));
        } catch(NumberFormatException ne) {
            setHours1End(null);
        }
        try {
            setHours2Start(Integer.parseInt(flds[21]));
        } catch(NumberFormatException ne) {
            setHours2Start(null);
        }
        try {
            setHours2End(Integer.parseInt(flds[22]));
        } catch(NumberFormatException ne) {
            setHours2End(null);
        }
        try {
            setHours3Start(Integer.parseInt(flds[23]));
        } catch(NumberFormatException ne) {
            setHours3Start(null);
        }
        try {
            setHours3End(Integer.parseInt(flds[24]));
        } catch(NumberFormatException ne) {
            setHours3End(null);
        }
        try {
            setHours4Start(Integer.parseInt(flds[25]));
        } catch(NumberFormatException ne) {
            setHours4Start(null);
        }
        try {
            setHours4End(Integer.parseInt(flds[26]));
        } catch(NumberFormatException ne) {
            setHours4End(null);
        }
        try {
            setHours5Start(Integer.parseInt(flds[27]));
        } catch(NumberFormatException ne) {
            setHours5Start(null);
        }
        try {
            setHours5End(Integer.parseInt(flds[28]));
        } catch(NumberFormatException ne) {
            setHours5End(null);
        }
        try {
            setHours6Start(Integer.parseInt(flds[29]));
        } catch(NumberFormatException ne) {
            setHours6Start(null);
        }
        try {
            setHours6End(Integer.parseInt(flds[30]));
        } catch(NumberFormatException ne) {
            setHours6End(null);
        }
        try {
            setHours7Start(Integer.parseInt(flds[31]));
        } catch(NumberFormatException ne) {
            setHours7Start(null);
        }
        try {
            setHours7End(Integer.parseInt(flds[32]));
        } catch(NumberFormatException ne) {
            setHours7End(null);
        }
        try {
            setLiters1Start(Integer.parseInt(flds[33]));
        } catch(NumberFormatException ne) {
            setLiters1Start(null);
        }
        try {
            setLiters1End(Integer.parseInt(flds[34]));
        } catch(NumberFormatException ne) {
            setLiters1End(null);
        }
        try {
            setLiters2Start(Integer.parseInt(flds[35]));
        } catch(NumberFormatException ne) {
            setLiters2Start(null);
        }
        try {
            setLiters2End(Integer.parseInt(flds[36]));
        } catch(NumberFormatException ne) {
            setLiters2End(null);
        }
        try {
            setLiters3Start(Integer.parseInt(flds[37]));
        } catch(NumberFormatException ne) {
            setLiters3Start(null);
        }
        try {
            setLiters3End(Integer.parseInt(flds[38]));
        } catch(NumberFormatException ne) {
            setLiters3End(null);
        }
        try {
            setLiters4Start(Integer.parseInt(flds[39]));
        } catch(NumberFormatException ne) {
            setLiters4Start(null);
        }
        try {
            setLiters4End(Integer.parseInt(flds[40]));
        } catch(NumberFormatException ne) {
            setLiters4End(null);
        }
        try {
            setLiters5Start(Integer.parseInt(flds[41]));
        } catch(NumberFormatException ne) {
            setLiters5Start(null);
        }
        try {
            setLiters5End(Integer.parseInt(flds[42]));
        } catch(NumberFormatException ne) {
            setLiters5End(null);
        }
        try {
            setLiters6Start(Integer.parseInt(flds[43]));
        } catch(NumberFormatException ne) {
            setLiters6Start(null);
        }
        try {
            setLiters6End(Integer.parseInt(flds[44]));
        } catch(NumberFormatException ne) {
            setLiters6End(null);
        }
        try {
            setLiters7Start(Integer.parseInt(flds[45]));
        } catch(NumberFormatException ne) {
            setLiters7Start(null);
        }
        try {
            setLiters7End(Integer.parseInt(flds[46]));
        } catch(NumberFormatException ne) {
            setLiters7End(null);
        }
        try {
            setIssuedby1Start(Integer.parseInt(flds[47]));
        } catch(NumberFormatException ne) {
            setIssuedby1Start(null);
        }
        try {
            setIssuedby1End(Integer.parseInt(flds[48]));
        } catch(NumberFormatException ne) {
            setIssuedby1End(null);
        }
        try {
            setIssuedby2Start(Integer.parseInt(flds[49]));
        } catch(NumberFormatException ne) {
            setIssuedby2Start(null);
        }
        try {
            setIssuedby2End(Integer.parseInt(flds[50]));
        } catch(NumberFormatException ne) {
            setIssuedby2End(null);
        }
        try {
            setIssuedby3Start(Integer.parseInt(flds[51]));
        } catch(NumberFormatException ne) {
            setIssuedby3Start(null);
        }
        try {
            setIssuedby3End(Integer.parseInt(flds[52]));
        } catch(NumberFormatException ne) {
            setIssuedby3End(null);
        }
        try {
            setIssuedby4Start(Integer.parseInt(flds[53]));
        } catch(NumberFormatException ne) {
            setIssuedby4Start(null);
        }
        try {
            setIssuedby4End(Integer.parseInt(flds[54]));
        } catch(NumberFormatException ne) {
            setIssuedby4End(null);
        }
        try {
            setIssuedby5Start(Integer.parseInt(flds[55]));
        } catch(NumberFormatException ne) {
            setIssuedby5Start(null);
        }
        try {
            setIssuedby5End(Integer.parseInt(flds[56]));
        } catch(NumberFormatException ne) {
            setIssuedby5End(null);
        }
        try {
            setIssuedby6Start(Integer.parseInt(flds[57]));
        } catch(NumberFormatException ne) {
            setIssuedby6Start(null);
        }
        try {
            setIssuedby6End(Integer.parseInt(flds[58]));
        } catch(NumberFormatException ne) {
            setIssuedby6End(null);
        }
        try {
            setIssuedby7Start(Integer.parseInt(flds[59]));
        } catch(NumberFormatException ne) {
            setIssuedby7Start(null);
        }
        try {
            setIssuedby7End(Integer.parseInt(flds[60]));
        } catch(NumberFormatException ne) {
            setIssuedby7End(null);
        }
    }
}
